1
f = [-3 0 -2 0 0 6];  
Aeq = [2 1 -3 0 0 6; -3 0 2 1 0 -2; -1 0 -3 0 -1 4];  
beq = [18; 24; -36];  
lb = zeros(6,1);  

[x, fval] = linprog(f, [], [], Aeq, beq, lb);
disp(x);
disp(-fval);

2
f = [-4 22];  % линейная часть
A = [5 3; -1 4];  % коэффициенты ограничений
b = [8; 5];  % правые части ограничений
lb = [0; -Inf];  % нижняя граница для x1

% решение задачи
[x, fval] = quadprog(H, f, A, b, [], [], lb);
disp(x);
disp(fval);

3
f = [-50; -200];
A = [1, 1;   
     4, 2;   
     4, 4;   
     1, 3];   

b = [6; 8; 12; 9];

lb = [0; 0];

[x, fval] = linprog(f, A, b, [], [], lb, []);

disp('Оптимальные значения переменных x1 и x2 (топливные и водяные насосы):');
disp(x);
disp('Максимальная прибыль:');
disp(-fval);

4
cost = [2 3 2 5;  
        5 4 8 2;  
        2 3 5 1;  
        9 5 5 7]; 

f = cost(:);

Aeq_worker = kron(eye(4), ones(1, 4));

Aeq_task = kron(ones(1, 4), eye(4));

Aeq = [Aeq_worker; Aeq_task];
beq = ones(8, 1);

lb = zeros(16, 1);
ub = ones(16, 1);

intcon = 1:16;

[x, fval] = intlinprog(f, intcon, [], [], Aeq, beq, lb, ub);

x_matrix = reshape(x, [4, 4]);

disp('Матрица назначений (1 — назначено, 0 — не назначено):');
disp(x_matrix);
disp('Минимальные затраты:');
disp(fval);

5
costs = [1 3 4 5; 5 2 10 3; 3 2 1 4; 6 4 2 6];
supply = [20; 30; 50; 20];

demand = [35; 25; 55; 5];

f = costs(:);

Aeq_production = kron(eye(4), ones(1, 4));
beq_production = supply;

Aeq_distribution = kron(ones(1, 4), eye(4));
beq_distribution = demand;

Aeq = [Aeq_production; Aeq_distribution];
beq = [beq_production; beq_distribution];

lb = zeros(16, 1);
ub = [];

[x, fval] = linprog(f, [], [], Aeq, beq, lb, ub);

solution = reshape(x, 4, 4);

disp('Оптимальные объемы поставок (по строкам - распределения, по столбцам - производства):');
disp(solution);
disp('Минимальные затраты:');
disp(fval);



	1
f = @(x) x .* exp(-0.5 * abs(x));

x_min = -10;
x_max = 2;

[x_opt, fval] = fminbnd(f, x_min, x_max);

disp('Минимум функции:');
disp(x_opt);
disp('Значение функции в минимуме:');
disp(fval);


	2.1
f = @(x) (x(1)^2 + x(2) - 11)^2 + (x(1) + x(2)^2 - 7)^2;

x0 = [-0.15, -0.85];

[x_opt, fval] = fminsearch(@(x) -f(x), x0);

disp('Локальный максимум функции:');
disp(x_opt);
disp('Значение функции в максимуме:');
disp(-fval);


	2.2
f = @(x) (x(1)^2 + x(2) - 11)^2 + (x(1) + x(2)^2 - 7)^2;
options = optimoptions('fminunc', 'Algorithm', 'quasi-newton', 'Display', 'iter');

[x_opt, fval] = fminunc(@(x) -f(x), x0, options);

disp('Локальный максимум функции:');
disp(x_opt);
disp('Значение функции в максимуме:');
disp(-fval);


	3
f = @(x) (x(1)^2 + x(2) - 11)^2 + (x(1) + x(2)^2 - 7)^2;

A = [6, -1; -6, 1];
b = [25; 16];

lb = [-5, -5]; 
ub = [5, 5];   

options = optimoptions('fmincon', 'Display', 'iter', 'Algorithm', 'sqp');
[x_min_con, fval] = fmincon(f, x0, A, b, [], [], lb, ub, [], options);

disp('Минимум функции Химмельблау с ограничениями:');
disp(x_min_con);
disp('Значение функции в минимуме:');
disp(fval);


	4.1
f = @(x) (x(1)^2 + x(2) - 11)^2 + (x(1) + x(2)^2 - 7)^2;

A = [-6, 1];
b = 16;

nonlcon = @(x) deal([6*(x(1)+3)^2 - (x(2)-6)^3 - 25; x(1)^2 + x(2)^2 - 25], []);

lb = [-5, -5];
ub = [5, 5];

options = optimoptions('ga', 'Display', 'iter');

[x_min_ga, fval_ga] = ga(f, 2, A, b, [], [], lb, ub, nonlcon, options);

disp('Минимум функции Химмельблау с использованием генетического алгоритма:');
disp(x_min_ga);
disp('Значение функции в минимуме:');
disp(fval_ga);


	4.2
f = @(x) (x(1)^2 + x(2) - 11)^2 + (x(1) + x(2)^2 - 7)^2;

A = [-6, 1];
b = 16;

nonlcon = @(x) deal([6*(x(1)+3)^2 - (x(2)-6)^3 - 25; x(1)^2 + x(2)^2 - 25], []);

lb = [-5, -5];
ub = [5, 5];

x0 = [-0.15, -0.85];

options = optimoptions('patternsearch', 'Display', 'iter');

[x_min_ps, fval_ps] = patternsearch(f, x0, A, b, [], [], lb, ub, nonlcon, options);

disp('Минимум функции Химмельблау с использованием patternsearch:');
disp(x_min_ps);
disp('Значение функции в минимуме:');
disp(fval_ps);