string s1;
s1 = "Это строка без закрывающей кавычки;

int val_lex_err;
val_lex_err = 10 $ 5;


// Синтаксические ошибки

int x;
x = 5 + ; // Ошибка: отсутствует операнд после '+' (ожидается диагностика от SyntacticalAnalyzer)
// Ожидаемый вывод: Синтаксическая ошибка, возможно указание на строку. Идеально - на место после '+'

if (x > 0 { // Ошибка: отсутствует закрывающая скобка ')' для if (ожидается диагностика от SyntacticalAnalyzer)
    output(x);
}
// Ожидаемый вывод: Синтаксическая ошибка.

int y
y = 10; // Ошибка: отсутствует ';' после объявления 'int y' (ожидается диагностика от SyntacticalAnalyzer)
// Ожидаемый вывод: Синтаксическая ошибка.

output( ; // Ошибка: отсутствует аргумент у output (ожидается диагностика от SyntacticalAnalyzer)
// Ожидаемый вывод: Синтаксическая ошибка.

whle (x > 0) { // Ошибка: опечатка в 'while' (если 'whle' не является ключевым словом, будет ошибка идентификатора или синтаксическая)
    x = x - 1;
}
// Ожидаемый вывод: Лексическая (если whle не распознается) или синтаксическая.


// Ошибки времени выполнения (интерпретатор ОПЗ)

int a;
int b;
a = 10;
b = 0;
int c;
// c = a / b; // Ошибка: деление на ноль (ожидается диагностика от RPNInterpreter)
// Ожидаемый вывод: Ошибка выполнения: Деление на ноль.

int[] my_array;
my_array[0] = 1; // Ошибка: использование неинициализированного массива (или переменной, если объявление массива не было распознано корректно)
                 // или, если массив объявлен с 0 размером по умолчанию, то выход за границы.
                 // В вашем коде объявление int[] без размера не поддерживается, будет ошибка трансляции или синтаксиса.
                 // Если было бы: int[0] my_array; my_array[0] = 1; -> выход за границы

string text_var;
// output(non_existent_var); // Ошибка: использование необъявленной переменной (ожидается диагностика от RPNInterpreter)
// Ожидаемый вывод: Ошибка выполнения: Переменная 'non_existent_var' не объявлена.

int num_var;
// num_var = "text"; // Ошибка: несоответствие типов при присваивании (ожидается диагностика от RPNInterpreter)
// Ожидаемый вывод: Ошибка выполнения: Несоответствие типов.

// Этот тест должен выдать последнюю ошибку, если предыдущие закомментированы
output(some_undefined_variable_for_final_error);